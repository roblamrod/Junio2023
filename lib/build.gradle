/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    
    //para poder publicar paquetes en github
    id 'maven-publish'
}

publishing {
    repositories {
        maven {
			name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/roblamrod/Junio2023")
            credentials {
            //las propiedades gpr.user y gpr.key están configuradas en gradle.properties en el raiz del proyecto, y se añade a .gitignore para que no se suban
            //O bien configuro las variables de entorno GITHUB_LOGIN y GITHUB_PACKAGES
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_LOGIN")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_PACKAGES")
                }
        }
    }
    publications {
        gpr(MavenPublication) {
         //Del tutorial https://docs.gradle.org/current/userguide/publishing_maven.html#publishing_maven
        
            groupId = 'us'
            artifactId = 'FirstDayAtSchool'
            version = '0.0.1-roblamrod'

            from components.java
        }
       
    }
}
version = '0.0.1-roblamrod'
tasks.withType(JavaCompile) {
    //Añadir la opción Xlint
    options.deprecation = true
  //  options.encoding = 'ISO-8859-1'
    options.encoding = 'UTF-8'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
	testImplementation('org.junit.jupiter:junit-jupiter')

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'


    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    //Añado para usar mockito
    //JAVADOC: https://javadoc.io/doc/org.mockito/mockito-core/4.3.1/overview-summary.html
    testImplementation 'org.mockito:mockito-core:4.3.1'
    // https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
    //JAVADOC: https://javadoc.io/doc/org.mockito/mockito-junit-jupiter/latest/index.html
    testImplementation 'org.mockito:mockito-junit-jupiter:4.3.1'
 
	testImplementation(platform('org.junit:junit-bom:5.8.2'))

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
